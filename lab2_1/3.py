# Создаем функцию с параметром seats, которая возвращает первый ряд, в котором имеется больше всего свободных мест и их количество
def first_vacant_row(seats):
    max_count = 0     # Вводим переменную для хранения максимального количества свободных мест
    max_row = 0     # Вводим переменную для хранения номера строки с максимальным количеством мест
    # Создаем цикл for с функцией enumerate; он будет проходиться по всем строкам списка seats, начиная с 1
    for row_index, row in enumerate(seats, 1):
        # Подсчет количества свободных мест в текущей строке с помощью функции count, где 0 - свободное место
        available_seats_count = row.count(0)  # 0 - пусто
        if available_seats_count > max_count:  # Определяем условие, по которому вычисляется: текущее кол-во свободных мест > сохранённого макс количества?
            max_row = row_index  # Обновляем номер строки, если текущая строка содержит больше свободных мест.
            max_count = available_seats_count  # Обновляем макс кол-во мест
    return max_row, max_count  # Возврат номер строки с макс кол-ом свободных мест и кол-во мест в этой строке

# Глобальная программа
# Импорт библиотеки random
import random
# С помощью функции seed генерируем одинаковые случайные значения при каждом запуске
random.seed(50)
# Вводим переменные: максимальное количества строк(10) и мест в каждой строке(5)
ROWS_MAX = 10
SEATS_MAX = 5
# Вводим двумерный массив, в котором хранятся, сгенерированным случайным образом 0 или 1 для представления занятых (1) и свободных (0) мест
seats = [[random.randint(0, 1) for seat in range(SEATS_MAX)]
         for row in range(ROWS_MAX)]
# Создаем цикл for, с помощью которого выводится двумерный массив с местами
for seat in seats:
    print(seat)
# Вызов функции first_vacant_row с аргументом seats; вывод номер строки с макс кол-ом свободных мест и кол-во мест в этой строке
print(first_vacant_row(seats))

# # Создаем функцию с параметром seats, которая возвращает первый ряд, в котором имеется больше всего свободных мест и их количество
# def first_vacant_row(seats):
#     max_count = 0     # Вводим переменную для хранения максимального количества свободных мест
#     max_row = 0     # Вводим переменную для хранения номера строки с максимальным количеством мест
#     # Создаем цикл for с функцией enumerate; он будет проходиться по всем строкам списка seats, начиная с 0
#     for row_index, row in enumerate(seats):
#         # Подсчет количества свободных мест в текущей строке с помощью функции count, где 0 - свободное место
#         available_seats_count = row.count(0)  # 0 - пусто
#         if available_seats_count > max_count:  # Определяем условие, по которому вычисляется: текущее кол-во свободных мест > сохранённого макс количества?
#             max_row = row_index  # Обновляем номер строки, если текущая строка содержит больше свободных мест.
#             max_count = available_seats_count  # Обновляем макс кол-во мест
#     return max_row, max_count  # Возврат номер строки с макс кол-ом свободных мест и кол-во мест в этой строке
#
# # # Глобальная программа
# # # Импорт библиотеки random
# # import random
# # # С помощью функции seed генерируем одинаковые случайные значения при каждом запуске
# # random.seed(50)
# # # Вводим переменные: максимальное количества строк(10) и мест в каждой строке(5)
# # ROWS_MAX = 10
# # SEATS_MAX = 5
# # # Вводим двумерный массив, в котором хранятся, сгенерированным случайным образом 0 или 1 для представления занятых (1) и свободных (0) мест
# # seats = [[random.randint(0, 1) for seat in range(SEATS_MAX)]
# #          for row in range(ROWS_MAX)]
# # # Создаем цикл for, с помощью которого выводится двумерный массив с местами
# # for seat in seats:
# #     print(seat)
# # # Вызов функции first_vacant_row с аргументом seats; вывод номер строки с макс кол-ом свободных мест и кол-во мест в этой строке
# # print(first_vacant_row(seats))








