# Создаем рекурсивную функцию power, которая возвращает 1 если аргумент y == 0 (базовый случай), иначе возвращает x^y
def power(x, y=2):
    if y == 0:
        return 1
    else:
        return x * power(x, y - 1)
# С помощью цикла while вводим x, y и рассчитываем x^y без необходимости каждый раз заново запускать программу при ошибке
while True:
    # Начало блока обработки исключений для проверки вводимых данных
    try:
        # Вводим переменные через консоль для хранения x и y
        x = int(input("x="))
        y = int(input("y="))
        # Проверка на отрицательность вводимого значения y
        if y < 0:
            raise ArithmeticError("y должен быть положительным")  # Если y отрицательный - генерируется исключение типа "ArithmeticError"
        print(power(x, y)) # Вызываем функцию power; выводим результат вычисления x^y
        break # Используем break для прерывания цикла, если все вводимые данные были корректны
    except ValueError: # Исключение типа "ValueError" и вывод сообщения
        print("Ошибка. Введите целое число")
    except ArithmeticError as e: # Исключение типа "ArithmeticError" и вывод ошибки
        print(e)

# # Создаем рекурсивную функцию power, которая возвращает 1 если аргумент y == 0 (базовый случай), иначе возвращает x^y
# def power(x, y=2):
#     if y == 0:
#         return 1
#     else:
#         return x * power(x, y - 1)
#
# # Вводим переменные через консоль для хранения x и y
# x = int(input("x="))
# y = int(input("y="))
# # Вызываем функцию power; выводим результат вычисления x^y
# print(power(x, y))
