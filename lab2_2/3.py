while True: # С помощью цикла while находим наиболее часто встречаемое отчество без необходимости каждый раз заново запускать программу при ошибке
    try: # Начало блока обработки исключений для проверки вводимых данных
        n = int(input("Введите кол-во человек: ")) # Вводим переменную через консоль для хранения кол-ва человек
        if n <= 0: # Проверка на отрицательность (или = 0) вводимых данных
            # Если число отрицательное (или = 0) - генерируется исключение типа "IndexError"
            raise IndexError("Ошибка. Кол-во человек должно быть > 0")
        middle_names = {} # Создаем пустой словарь для хранения отчеств и их количеств
    # Создаем цикл с функцией range (диапазон: кол-во человек) для ввода ФИО через консоль и записи их в список fio; подсчет кол-ва одинаковых фамилий
        for i in range(n):
            fio = input("Введите ФИО через пробел: ").split()
            if len(fio) != 3: # Проверка длины ФИО
                raise IndexError("Ошибка. ФИО состоит из 3 слов") # Если ФИО состоит не из 3 элементов - генерируется исключение типа "IndexError"
            if fio[0].isdigit() or fio[1].isdigit() or fio[2].isdigit(): # Проверка значений элементов на числа
                # Если значение не проходит проверку (функция isdigit) - генерируется исключение типа "ValueError"
                raise ValueError("Ошибка. ФИО должно содержать буквы")
            middle_name = fio[2] # Вводим переменную для хранения отчества (3 элемент списка fio)
            middle_names[middle_name] = middle_names.get(middle_name, 0) + 1 # Увеличение счетчика для данного отчества на 1 в словаре middle_names
    # Сортировка словаря по ключу (отчеству), используя лямбду-выражение: ключ = 2 элемент словаря, т.е. количеству отчеств; вывод самого популярного отчества
        print(sorted(middle_names.items(), key=lambda item: item[1])[-1][0])
        print("В расчете участвовало человек:", n) # Вывод n (кол-во человек)
        break # Используем break для прерывания цикла, если все вводимые данные были корректны
    except ValueError as val_err: # Исключение типа "ValueError" и вывод ошибки
        print(val_err)
    except IndexError as in_err: # Исключение типа "IndexError" и вывод ошибки
        print(in_err)

# # Вводим переменную через консоль для хранения кол-ва человек
# n = int(input("Введите кол-во человек: "))
# # Создаем пустой словарь для хранения отчеств и их количеств
# middle_names = {}
# # Создаем цикл с функцией range (диапазон: кол-во человек) для ввода ФИО через консоль и записи их в список fio; подсчет кол-ва одинаковых фамилий
# for i in range(n):
#     fio = input("Введите ФИО через пробел: ").split()
#     middle_name = fio[2] # Вводим переменную для хранения отчества (3 элемент списка fio)
#     middle_names[middle_name] = middle_names.get(middle_name, 0) + 1 # Увеличение счетчика для данного отчества на 1 в словаре middle_names
# # Сортировка словаря по ключу (отчеству), используя лямбду-выражение: ключ = 2 элемент словаря, т.е. количеству отчеств; вывод самого популярного отчества
# print(sorted(middle_names.items(), key=lambda item: item[1])[-1][0])
# print("В расчете участвовало человек:", n) # Вывод n (кол-во человек)





