def f(x): # Создаем функцию f, которая вычисляет значение функции и возвращает результат
    return x ** 2 / (x + 2) - 3
while True: # С помощью цикла while находим значение функции без необходимости каждый раз заново запускать программу при ошибке
    try: # Начало блока обработки исключений для проверки вводимых данных
        k = int(input("Введите границу интервала [-k; k]: ")) # Вводим переменную через консоль для хранения границ интервала
        if k <= 0:  # Проверка на отрицательность (или = 0) вводимых данных
            # Если число отрицательное (или = 0) - генерируется исключение типа "ValueError"
            raise ValueError("Введите положительное число")
        h = float(input("Введите шаг табуляции: ")) # Вводим переменную через консоль для хранения шага табуляции
        if h <= 0: # Проверка на отрицательность (или = 0) вводимых данных
            # Если число отрицательное (или = 0) - генерируется исключение типа "ValueError"
            raise ValueError("Введите положительное число")
        x = -k # Вводим переменную, в которую инициализируется -k; чтобы начать табуляцию с -
        print("{:>10} {:>10}".format("x", "f(x)")) # Вывод форматированных заголовков колонок "x" и "f(x)"
        while x <= k: # С помощью while выводится "x" и результат функции "f(x)" с двумя знаками после зпт, пока x находится в пределах от -k до k
            try: # Начало внутреннего блока обработки исключений для проверки
                print("{:10.2f} {:10.2f}".format(x, f(x)))
            except ZeroDivisionError: # Исключение типа "ZeroDivisionError" и вывод исправленной строчки
                print("{:10.2f}          -".format(x))
            x += h # Увеличение значения х на шаг h для дальнейших итераций
        break # Используем break для прерывания цикла, если все вводимые данные были корректны
    except ValueError as val_err: # Исключение типа "ValueError" и вывод сообщения и ошибки
        print(f"Ошибка. {val_err}")


# def f(x): # Создаем функцию f, которая вычисляет значение функции и возвращает результат
#     return x**2 / (x + 2) - 3
# # Вводим переменные через консоль для хранения границ интервала и шага табуляции
# k = int(input("Введите границу интервала [-k; k]: "))
# h = float(input("Введите шаг табуляции: "))
# x = -k # Вводим переменную, в которую инициализируется -k; чтобы начать табуляцию с -
# print("{:>10} {:>10}".format("x", "f(x)")) # Вывод форматированных заголовков колонок "x" и "f(x)"
# while x <= k: # С помощью while выводится "x" и результат функции "f(x)" с двумя знаками после зпт, пока x находится в пределах от -k до k
#     print("{:10.2f} {:10.2f}".format(x, f(x)))
#     x += h # Увеличение значения х на шаг h для дальнейших итераций
